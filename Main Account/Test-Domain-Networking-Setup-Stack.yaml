AWSTemplateFormatVersion: "2010-09-09"
Description: CFT to setup VPC, Route Tables, IGW and subnets for Test Domain
Resources:
  TestDomainVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 69.69.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Test Domain VPC

  TestDomainNetworkACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref TestDomainVPC
      Tags:
        - Key: Name
          Value: Test Domain Network ACL
  TestDomainAllowAllInboundNACLEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref TestDomainNetworkACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
  TestDomainAllowAllOutboundNACLEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref TestDomainNetworkACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100

  TestDomainIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Test Domain IGW
  TestDomainIgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref TestDomainIGW
      VpcId: !Ref TestDomainVPC

  TestDomainPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TestDomainVPC
      Tags:
        - Key: Name
          Value: Test Domain Private RT
  TestDomainPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TestDomainVPC
      Tags:
        - Key: Name
          Value: Test Domain Public RT

  TestDomainPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TestDomainVPC
      CidrBlock: 69.69.0.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Test Domain Private Subnet 1
  TestDomainPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TestDomainVPC
      CidrBlock: 69.69.128.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Test Domain Public Subnet 1

  PriSubnet1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref TestDomainPrivateRouteTable
      SubnetId: !Ref TestDomainPrivateSubnet1
  PubSubnet1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref TestDomainPublicRouteTable
      SubnetId: !Ref TestDomainPublicSubnet1
  PriSubnet1NaclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref TestDomainNetworkACL
      SubnetId: !Ref TestDomainPrivateSubnet1
  PubSubnet1NaclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref TestDomainNetworkACL
      SubnetId: !Ref TestDomainPublicSubnet1

  TestDomainDefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: TestDomainIgwAttachment
    Properties:
      RouteTableId: !Ref TestDomainPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref TestDomainIGW
Outputs:
  TestDomainVpcId:
    Description: Vpc Id of the test domain created by this CFT Stack
    Value: !GetAtt TestDomainVPC.VpcId
    Export:
      Name: TestDomainVpcId
  TestDomainPrivateSubnet1Id:
    Description: Private Subnet 1 Id of the test domain created by this CFT Stack
    Value: !GetAtt TestDomainPrivateSubnet1.SubnetId
    Export:
      Name: TestDomainPrivateSubnet1Id
  TestDomainPublicSubnet1Id:
    Description: Public Subnet 1 Id of the test domain created by this CFT Stack
    Value: !GetAtt TestDomainPublicSubnet1.SubnetId
    Export:
      Name: TestDomainPublicSubnet1Id
